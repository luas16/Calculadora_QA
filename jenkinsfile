pipeline {
  agent any
 parameters {
        string(name: 'name_container', defaultValue: 'S3_Proyecto_01', description: 'nombre del docker')
        string(name: 'name_imagen', defaultValue: 'iS3_Proyecto_01', description: 'nombre de la imagen')
        string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
        string(name: 'puerto_imagen', defaultValue: '81', description: 'puerto a publicar')
    }
    environment {
        DOCKERHUB_CREDENTIALS=credentials('dockerhub')
        name_final = "${name_container}${tag_imagen}${puerto_imagen}"        
    }
    stages {
	        stage('gitclone') {

			steps {
				git 'https://github.com/luas16/S3_proyecto.git'
			     }
		    }
		    
          stage('stop/rm') {

            when {
                expression { 
                    DOCKER_EXIST = sh(returnStdout: true, script: 'echo "$(docker ps -q --filter name=${name_final})"').trim()
                    return  DOCKER_EXIST != '' 
                }
            }
            steps {
                script{
                    sh ''' 
                         docker stop ${name_final}
                    '''
                    }
                    
                }                    
                                  
            }
           
        stage('build') {
            steps {
                script{
                    sh ''' 
                    docker build -t ${name_imagen}:${tag_imagen}
                    '''
                    }
                    
                }                    
                                  
            }
            stage('run') {
            steps {
                script{
                    sh ''' 
                        docker run -dp ${puerto_imagen}:80 --name ${name_final} ${name_imagen}:${tag_imagen}
 
                    '''
                    }
                    
                }                    
                                  
            }
            
          
        }   
    }